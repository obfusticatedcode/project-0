"use strict";$(function(){function e(){var e=$(event.target).position();return m=o(e.top,e.left)}function a(){$("div.square").removeData("jumpedPieces").removeClass("movable")}function t(e,a){return{top:a*(f+h)+"px",left:e*(f+h)+"px"}}function o(e,a){return{x:a/(f+h),y:e/(f+h)}}function n(e){var a=$("div.square"),t={};$("div.piece").each(function(e,a){var n=$(a).position(),i=o(n.top,n.left),s=8*i.y+i.x;t[s]=$(a)});var n=o(e.position().top,e.position().left),i=[{x:1,y:1},{x:-1,y:1}],s=[{x:1,y:-1},{x:-1,y:-1}],l=i.concat(s),r=void 0;r=e.hasClass("king")?l:e.hasClass("light")?i:s;var c=function(e){return!(e.x>=0&&e.x<8&&e.y>=0&&e.y<8)},d=$();return function o(n,i,s){if(!c(n)){var l=a.eq(8*n.y+n.x);$.each(i,function(i,r){var v={x:r.x+n.x,y:r.y+n.y};if(!c(v)){var u=8*v.y+v.x;if(t[u]){if(e.hasClass("dark")){if(t[u].hasClass("dark"))return}else if(t[u].hasClass("light"))return;var f={x:2*r.x+n.x,y:2*r.y+n.y};if(c(f))return;var h=8*f.y+f.x;if(!t[h]){var p=a.eq(h);if(!p.is(d)){d=d.add(p);var g=t[u];l.data("jumpedPieces")&&(g=g.add(l.data("jumpedPieces"))),p.data("jumpedPieces",g),o(f,r,!0)}}}else if(!s){var C=a.eq(u);C.data("jumpedPieces",$()),d=d.add(C)}}})}}(n,r,!1),d}function i(e,a,t){e.css("top",a),e.css("left",t)}function s(e){e.hasClass("selected")?e.removeClass("selected"):($("div.piece").each(function(e,a){$(a).hasClass("selected")&&$(a).removeClass("selected")}),e.addClass("selected"))}function l(){x.html(parseInt(x.html())+1)}function r(e){var a="";a="light"===e?"#lightMoveCount":"#darkMoveCount";var t=parseInt($(a).html());t++,$(a).html(t),console.log(t),t%2==1?(console.log("Hello odd number"),console.log(q)):t%2==0&&(console.log("Hello even number"),console.log(k))}function c(e){e.data("jumpedPieces").remove()}function d(e,a){for(var t=0;t<64;t++)(a<8||a>=56)&&e.addClass("king")}function v(){var e=q.length,a=k.length;return 0===e?console.log("Player 1 wins"):0===a?console.log("Player 2 wins"):1===a&&1===e?console.log("It's a draw"):void 0}function u(){location.reload()}var f=46,h=2,p=$("div#board"),g=$("div#pieces"),C=$("#reset-button"),m=null;!function(){function e(e){return e%8%2^Math.floor(e/8)%2}for(var a=0;a<64;a++)p.append($("<div/>").addClass("square"));for(var t=0;t<24;t++)g.append($("<div/>").addClass("piece"));$("div.square").each(function(a){0===e(a)?$(this).addClass("light"):$(this).addClass("dark")})}(),function(){$("piece"),$("div.piece:even").addClass("light"),$("div.piece:odd").addClass("dark")}(),function(){$("div.piece.dark").each(function(e,a){var o=Math.floor(e/4)+5,n=e%4*2+(1-o%2),s=t(n,o);i($(a),s.top,s.left)})}(),function(){var e=$("div.piece.light");e.each(function(a,o){console.log(e.length);var n=Math.floor(a/4),s=a%4*2+(1-n%2),l=t(s,n);i($(o),l.top,l.left)})}(),$("div.square").on("click",function(o){e();var n=$(o.target);if(n.hasClass("movable")){var s=$("div.piece.selected");if(1===s.length){var u=n.prevAll().length,f=u%8,h=Math.floor(u/8),p=t(f,h);i(s,p.top,p.left),c(n),d(s,n.prevAll().length),s.removeClass("selected"),$("div.square").removeClass("movable"),v(),l();var g="";g=!0===s.hasClass("light")?"light":"dark",r(g),a()}}});var x=$("#moveCounter"),y=!0;!function(){!0===y&&(console.log(y),$("div.piece").on("click",function(e){var t=$(e.target);s(t),a(),t.hasClass("selected")&&n(t).addClass("movable")}))}();var k=$("div.piece.light"),q=$("div.piece.dark");C.on("click",function(){u()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
