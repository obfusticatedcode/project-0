"use strict";$(function(){function e(){var e=$(event.target).position(),t=a(e.top,e.left);return console.log(t),t}function t(e,t){return{top:t*(c+r)+"px",left:e*(c+r)+"px"}}function a(e,t){return{x:t/(c+r),y:e/(c+r)}}function o(){var e=$("div.square"),t=$("div.piece").map(function(t,o){var s=$(o).position(),i=a(s.top,s.left),n=8*i.y+i.x;return e[n]});return $("div.square.dark").not(t)}function s(e,t,a){e.css("top",t),e.css("left",a)}function i(e){e.hasClass("selected")?e.removeClass("selected"):($("div.piece").each(function(e,t){$(t).hasClass("selected")&&$(t).removeClass("selected")}),e.addClass("selected"))}function n(){$("#moveCounter").html(parseInt($("#moveCounter").html(),10)+1)}function l(){location.reload()}for(var c=46,r=2,d=$("div#board"),v=$("div#pieces"),u=$("#reset-button"),f=0;f<64;f++)d.append($("<div/>").addClass("square"));!function(){function e(e){return e%8%2^Math.floor(e/8)%2}$("div.square").each(function(t){0===e(t)?$(this).addClass("light"):$(this).addClass("dark")})}();for(var p=0;p<24;p++)v.append($("<div/>").addClass("piece"));!function(){$("piece"),$("div.piece:even").addClass("light"),$("div.piece:odd").addClass("dark")}(),$("div.piece.light").each(function(e,a){var o=Math.floor(e/4),i=e%4*2+(1-o%2),n=t(i,o);s($(a),n.top,n.left)}),$("div.piece.dark").each(function(e,a){var o=Math.floor(e/4)+5,i=e%4*2+(1-o%2),n=t(i,o);s($(a),n.top,n.left)}),o().addClass("movable"),u.on("click",function(){l()}),$("div.piece").on("click",function(t){var a=$(t.target);e(),a.hasClass("dark")?console.log(a):console.log("This is a light piece"),i(a)}),$("div.square").on("click",function(e){var a=$(e.target);if(a.hasClass("movable")){var i=$("div.piece.selected");if(1===i.length){var l=a.prevAll().length,c=l%8,r=Math.floor(l/8),d=t(c,r);s(i,d.top,d.left),n(),i.removeClass("selected"),$("div.square").removeClass("movable"),o().addClass("movable")}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
