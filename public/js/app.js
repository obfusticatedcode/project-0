"use strict";$(function(){function e(){var e=$(event.target).position();return f=a(e.top,e.left)}function t(e,t){return{top:t*(r+c)+"px",left:e*(r+c)+"px"}}function a(e,t){return{x:t/(r+c),y:e/(r+c)}}function o(){var e=$("div.square"),t=$("div.piece").map(function(t,o){var n=$(o).position(),s=a(n.top,n.left),i=8*s.y+s.x;return e[i]});return $("div.square.dark").not(t)}function n(e,t,a){e.css("top",t),e.css("left",a)}function s(e){e.hasClass("selected")?e.removeClass("selected"):($("div.piece").each(function(e,t){$(t).hasClass("selected")&&$(t).removeClass("selected")}),e.addClass("selected"))}function i(){$("#moveCounter").html(parseInt($("#moveCounter").html(),10)+1)}function l(){location.reload()}for(var r=46,c=2,d=$("div#board"),v=$("div#pieces"),u=$("#reset-button"),f=null,p=0;p<64;p++)d.append($("<div/>").addClass("square"));!function(){function e(e){return e%8%2^Math.floor(e/8)%2}$("div.square").each(function(t){0===e(t)?$(this).addClass("light"):$(this).addClass("dark")})}();for(var h=0;h<24;h++)v.append($("<div/>").addClass("piece"));!function(){$("piece"),$("div.piece:even").addClass("light"),$("div.piece:odd").addClass("dark")}(),$("div.piece.light").each(function(e,a){var o=Math.floor(e/4),s=e%4*2+(1-o%2),i=t(s,o);n($(a),i.top,i.left)}),$("div.piece.dark").each(function(e,a){var o=Math.floor(e/4)+5,s=e%4*2+(1-o%2),i=t(s,o);n($(a),i.top,i.left)}),o().addClass("movable"),u.on("click",function(){l()}),$("div.piece").on("click",function(t){var a=$(t.target);e();var o=f;console.log(o);var n=o+r+1;console.log(n);var i=a.hasClass("dark");console.log(i),s(a)}),$("div.square").on("click",function(a){e();var s=$(a.target);if(s.hasClass("movable")){var l=$("div.piece.selected");if(1===l.length){var r=s.prevAll().length,c=r%8,d=Math.floor(r/8),v=t(c,d);n(l,v.top,v.left),i(),l.removeClass("selected"),$("div.square").removeClass("movable"),o().addClass("movable")}}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
