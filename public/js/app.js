"use strict";$(function(){function e(e,a){return{top:a*(o+r)+"px",left:e*(o+r)+"px"}}function a(e,a){return{x:a/(o+r),y:e/(o+r)}}function i(){var e=$("div.square"),i=$("div.piece").map(function(i,t){var d=$(t).position(),o=a(d.top,d.left),r=8*o.y+o.x;return e[r]});return $("div.square.dark").not(i)}function t(){$("piece");$("div.piece:even").addClass("light"),$("div.piece:odd").addClass("dark")}function d(e,a,i){e.css("top",a),e.css("left",i)}var o=46,r=2,n=$("div#board"),s=$("div#pieces");$("document").ready(function(){for(var a=0;a<64;a++)n.append($("<div/>").addClass("square"));for(var o=0;o<24;o++)s.append($("<div/>").addClass("piece"));t(),$("div.piece.light").each(function(a,i){var t=Math.floor(a/4),o=a%4*2+(1-t%2),r=e(o,t);d($(i),r.top,r.left)}),$("div.piece.dark").each(function(a,i){var t=Math.floor(a/4)+5,o=a%4*2+(1-t%2),r=e(o,t);d($(i),r.top,r.left)}),i().addClass("movable"),$("div.piece").click(function(){$(this)}),$("div.square").click(function(){var a=$(this);if(a.hasClass("movable")){var t=$("div.piece.selected");if(1===t.length){var o=a.prevAll().length,r=o%8,n=Math.floor(o/8),s=e(r,n);d(t,s.top,s.left),t.removeClass("selected"),$("div.square").removeClass("movable"),i().addClass("movable")}}})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
